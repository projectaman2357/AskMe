<!DOCTYPE html>
<html>
<head>
    <title>Certificate Generator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }

        #certificate {
            display: none;
            width: 400px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            background-color: #fff;
        }

        #generateButton {
            margin-top: 20px;
            cursor: pointer;
            background-color: #3498db;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        #generateButton:hover {
            background-color: #1E67A0;
        }

        #downloadButton {
            display: none;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Certificate Generator</h1>

    <button id="generateButton">Generate Certificate</button>
    <a id="downloadButton" href="#" download="certificate.pdf">Download Certificate</a>

    <div id="certificate">
        <h2>Certificate of Completion</h2>
        <p>This is to certify that</p>
        <h3>Your Name</h3>
        <p>has successfully completed the course</p>
        <h3>Course Name</h3>
        <p>on <span id="completionDate">Completion Date</span></p>
    </div>

    <script>
        // JavaScript to show the certificate when the button is clicked and reveal the download link
        const generateButton = document.getElementById('generateButton');
        const certificate = document.getElementById('certificate');
        const downloadButton = document.getElementById('downloadButton');

        generateButton.addEventListener('click', function () {
            certificate.style.display = 'block';
            downloadButton.style.display = 'block';
        });
    </script>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</body>
</html>
